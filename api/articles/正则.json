{"title":"正则简单介绍","slug":"正则","date":"2019-04-20T10:51:32.000Z","updated":"2019-04-20T10:51:32.000Z","comments":true,"path":"api/articles/正则.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h4 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h4><blockquote>\n<p>regular expression：RegExp<br>用来处理字符串的规则</p>\n<ul>\n<li>只能处理字符串</li>\n<li>它是一个规则：可以验证字符串是否符合某个规则（test），也可以把字符串中符合规则的内容捕获到（exec / match…）</li>\n</ul>\n</blockquote>\n<h5 id=\"创建方式有两种\"><a href=\"#创建方式有两种\" class=\"headerlink\" title=\"创建方式有两种\"></a>创建方式有两种</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//=&gt;字面量创建方式（两个斜杠之间包起来的，都是用来描述规则的元字符）</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg1 = <span class=\"regexp\">/\\d+/</span>;</span><br><span class=\"line\"><span class=\"comment\">//=&gt;构造函数模式创建  两个参数：元字符字符串，修饰符字符串</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg2 = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"\\\\d+\"</span>);</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"正则表达式由两部分组成\"><a href=\"#正则表达式由两部分组成\" class=\"headerlink\" title=\"正则表达式由两部分组成\"></a>正则表达式由两部分组成</h5><ul>\n<li>元字符</li>\n<li>修饰符<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*常用的元字符*/</span></span><br><span class=\"line\"><span class=\"comment\">//=&gt;1.量词元字符：设置出现的次数</span></span><br><span class=\"line\">* 零到多次  </span><br><span class=\"line\">+ 一到多次</span><br><span class=\"line\">? 零次或者一次</span><br><span class=\"line\">&#123;n&#125; 出现n次</span><br><span class=\"line\">&#123;n,&#125; 出现n到多次</span><br><span class=\"line\">&#123;n,m&#125; 出现n到m次</span><br><span class=\"line\"><span class=\"comment\">//=&gt;2.特殊元字符：单个或者组合在一起代表特殊的含义</span></span><br><span class=\"line\">\\    转义字符（普通-&gt;特殊-&gt;普通）</span><br><span class=\"line\">.    除\\n（换行符）以外的任意字符</span><br><span class=\"line\">^    以哪一个元字符作为开始</span><br><span class=\"line\">$    以哪一个元字符作为结束</span><br><span class=\"line\">\\n   换行符</span><br><span class=\"line\">\\d   <span class=\"number\">0</span>~<span class=\"number\">9</span>之间的一个数字</span><br><span class=\"line\">\\D   非<span class=\"number\">0</span>~<span class=\"number\">9</span>之间的一个数字 （大写和小写的意思是相反的）</span><br><span class=\"line\">\\w   数字、字母、下划线中的任意一个字符</span><br><span class=\"line\">\\s   一个空白字符（包含空格、制表符、换页符等）</span><br><span class=\"line\">\\t   一个制表符（一个TAB键：四个空格）</span><br><span class=\"line\">\\b   匹配一个单词的边界</span><br><span class=\"line\">x|y  x或者y中的一个字符</span><br><span class=\"line\">[xyz] x或者y或者z中的一个字符</span><br><span class=\"line\">[^xy] 除了x/y以外的任意字符</span><br><span class=\"line\">[a-z] 指定a-z这个范围中的任意字符  [<span class=\"number\">0</span><span class=\"number\">-9</span>a-zA-Z_]===\\w</span><br><span class=\"line\">[^a-z] 上一个的取反“非”</span><br><span class=\"line\">()   正则中的分组符号</span><br><span class=\"line\">(?:) 只匹配不捕获</span><br><span class=\"line\">(?=) 正向预查</span><br><span class=\"line\">(?!) 负向预查 </span><br><span class=\"line\"><span class=\"comment\">//=&gt;3.普通元字符：代表本身含义的</span></span><br><span class=\"line\">/putong/ 此正则匹配的就是 <span class=\"string\">\"putong\"</span></span><br><span class=\"line\"><span class=\"comment\">/*正则表达式常用的修饰符：img*/</span></span><br><span class=\"line\">i =&gt;ignoreCase  忽略单词大小写匹配</span><br><span class=\"line\">m =&gt;multiline   可以进行多行匹配</span><br><span class=\"line\">g =&gt;global      全局匹配</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p><strong>常用的正则表达式</strong></p>\n<ol>\n<li><p>验证是否为有效数字</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 规则分析</span></span><br><span class=\"line\"><span class=\"comment\"> * 1.可能出现 + - 号，也可能不出现  [+-]?</span></span><br><span class=\"line\"><span class=\"comment\"> * 2.一位0-9都可以，多位首位不能是0 (\\d|([1-9]\\d+))</span></span><br><span class=\"line\"><span class=\"comment\"> * 3.小数部分可能有可能没有，一旦有后面必须有小数点+数字 (\\.\\d+)?</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/^[+-]?(\\d|([1-9]\\d+))(\\.\\d+)?$/</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>验证密码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//=&gt;数字、字母、下划线</span></span><br><span class=\"line\"><span class=\"comment\">//=&gt;6~16位</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> val = userPassInp.value,</span><br><span class=\"line\">    reg = <span class=\"regexp\">/^\\w&#123;6,16&#125;$/</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> flag=reg.test(val);</span><br><span class=\"line\">&lt;!-- 不用正则 --&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkPass</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(val.length&lt;<span class=\"number\">6</span> || val.length&gt;<span class=\"number\">16</span>)&#123;</span><br><span class=\"line\">    \talert(<span class=\"string\">'长度必须介于6-16位之间！'</span>);</span><br><span class=\"line\">    \t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> area=[<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>....<span class=\"string\">'_'</span>]; <span class=\"comment\">//=&gt;包含数字、字母、下划线</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;val.length;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> char=val[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!area.includes(char))&#123;</span><br><span class=\"line\">            alert(<span class=\"string\">'格式不正确！'</span>);</span><br><span class=\"line\">    \t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>验证真实姓名的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 1.汉字  /^[\\u4E00-\\u9FA5]$/</span></span><br><span class=\"line\"><span class=\"comment\"> * 2.名字长度 2~10位</span></span><br><span class=\"line\"><span class=\"comment\"> * 3.可能有译名 ·汉字  (·[\\u4E00-\\u9FA5]&#123;2,10&#125;)&#123;0,2&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/^[\\u4E00-\\u9FA5]&#123;2,10&#125;(·[\\u4E00-\\u9FA5]&#123;2,10&#125;)&#123;0,2&#125;$/</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>验证邮箱的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/^\\w+((-\\w+)|(\\.\\w+))*@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$/</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>身份证号码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/^(\\d&#123;6&#125;)(\\d&#123;4&#125;)(\\d&#123;2&#125;)(\\d&#123;2&#125;)\\d&#123;2&#125;(\\d)(\\d|X)$/</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>把时间字符串进行处理</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> time = <span class=\"string\">\"2019-08-13\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//=&gt;变为\"2019年08月13日\"</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/^(\\d&#123;4&#125;)-(\\d&#123;1,2&#125;)-(\\d&#123;1,2&#125;)$/</span>;</span><br><span class=\"line\">time = time.replace(reg,(...arg)=&gt;&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> [,$<span class=\"number\">1</span>,$<span class=\"number\">2</span>,$<span class=\"number\">3</span>]=arg;</span><br><span class=\"line\">    $<span class=\"number\">2.</span>length&lt;<span class=\"number\">2</span>?$<span class=\"number\">2</span>=<span class=\"string\">\"0\"</span>+$<span class=\"number\">2</span>:<span class=\"literal\">null</span>;</span><br><span class=\"line\">    $<span class=\"number\">3.</span>length&lt;<span class=\"number\">2</span>?$<span class=\"number\">3</span>=<span class=\"string\">\"0\"</span>+$<span class=\"number\">3</span>:<span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $<span class=\"number\">1</span>+<span class=\"string\">\"年\"</span>+$<span class=\"number\">2</span>+<span class=\"string\">\"月\"</span>+$<span class=\"number\">3</span>+<span class=\"string\">\"日\"</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>单词首字母大写</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">\"good good study，day day up！\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/\\b([a-zA-Z])[a-zA-Z]*\\b/g</span>;</span><br><span class=\"line\">str = str.replace(reg,(...arg)=&gt;&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> [content,$<span class=\"number\">1</span>]=arg;</span><br><span class=\"line\">    $<span class=\"number\">1</span>=$<span class=\"number\">1.</span>toUpperCase();</span><br><span class=\"line\">    content=content.substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $<span class=\"number\">1</span>+content;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str); <span class=\"comment\">//=&gt;\"Good Good Study，Day Day Up！\"</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n","categories":[],"tags":[{"name":"JS","slug":"JS","count":2,"path":"api/tags/JS.json"}]}