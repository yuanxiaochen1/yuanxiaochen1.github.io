{"title":"HTTP1.0 HTTP 1.1 HTTP 2.0主要区别 （转载）","slug":"HTTP1-0-HTTP-1-1-HTTP-2-0主要区别","date":"2019-09-14T00:23:44.000Z","updated":"2019-09-14T00:28:28.000Z","comments":true,"path":"api/articles/HTTP1-0-HTTP-1-1-HTTP-2-0主要区别.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h3 id=\"HTTP1-0-HTTP-1-1主要区别\"><a href=\"#HTTP1-0-HTTP-1-1主要区别\" class=\"headerlink\" title=\"HTTP1.0 HTTP 1.1主要区别\"></a>HTTP1.0 HTTP 1.1主要区别</h3><h4 id=\"长连接\"><a href=\"#长连接\" class=\"headerlink\" title=\"长连接\"></a>长连接</h4><p>HTTP 1.0需要使用keep-alive参数来告知服务器端要建立一个长连接，而HTTP1.1默认支持长连接。</p>\n<p>HTTP是基于TCP/IP协议的，创建一个TCP连接是需要经过三次握手的,有一定的开销，如果每次通讯都要重新建立连接的话，对性能有影响。因此最好能维持一个长连接，可以用个长连接来发多个请求。</p>\n<h4 id=\"节约带宽\"><a href=\"#节约带宽\" class=\"headerlink\" title=\"节约带宽\"></a>节约带宽</h4><p>HTTP 1.1支持只发送header信息(不带任何body信息)，如果服务器认为客户端有权限请求服务器，则返回100，否则返回401。客户端如果接受到100，才开始把请求body发送到服务器。</p>\n<p>这样当服务器返回401的时候，客户端就可以不用发送请求body了，节约了带宽。</p>\n<p>另外HTTP还支持传送内容的一部分。这样当客户端已经有一部分的资源后，只需要跟服务器请求另外的部分资源即可。这是支持文件断点续传的基础。</p>\n<h4 id=\"HOST域\"><a href=\"#HOST域\" class=\"headerlink\" title=\"HOST域\"></a>HOST域</h4><p>现在可以web server例如tomat，设置虚拟站点是非常常见的，也即是说，web server上的多个虚拟站点可以共享同一个ip和端口。</p>\n<p>HTTP1.0是没有host域的，HTTP1.1才支持这个参数。</p>\n<h3 id=\"HTTP1-1-HTTP-2-0主要区别\"><a href=\"#HTTP1-1-HTTP-2-0主要区别\" class=\"headerlink\" title=\"HTTP1.1 HTTP 2.0主要区别\"></a>HTTP1.1 HTTP 2.0主要区别</h3><h4 id=\"多路复用\"><a href=\"#多路复用\" class=\"headerlink\" title=\"多路复用\"></a>多路复用</h4><p>HTTP2.0使用了多路复用的技术，做到同一个连接并发处理多个请求，而且并发请求的数量比HTTP1.1大了好几个数量级。</p>\n<p>当然HTTP1.1也可以多建立几个TCP连接，来支持处理更多并发的请求，但是创建TCP连接本身也是有开销的。</p>\n<p>TCP连接有一个预热和保护的过程，先检查数据是否传送成功，一旦成功过，则慢慢加大传输速度。因此对应瞬时并发的连接，服务器的响应就会变慢。所以最好能使用一个建立好的连接，并且这个连接可以支持瞬时并发的请求。</p>\n<p>关于多路复用，可以参看学习NIO 。</p>\n<h4 id=\"数据压缩\"><a href=\"#数据压缩\" class=\"headerlink\" title=\"数据压缩\"></a>数据压缩</h4><p>HTTP1.1不支持header数据的压缩，HTTP2.0使用HPACK算法对header的数据进行压缩，这样数据体积小了，在网络上传输就会更快。</p>\n<h4 id=\"服务器推送\"><a href=\"#服务器推送\" class=\"headerlink\" title=\"服务器推送\"></a>服务器推送</h4><p>意思是说，当我们对支持HTTP2.0的web server请求数据的时候，服务器会顺便把一些客户端需要的资源一起推送到客户端，免得客户端再次创建连接发送请求到服务器端获取。这种方式非常合适加载静态资源。</p>\n<p>服务器端推送的这些资源其实存在客户端的某处地方，客户端直接从本地加载这些资源就可以了，不用走网络，速度自然是快很多的。</p>\n<p>详细内容：</p>\n<p>1、HTTP/2.0 相比1.0有哪些重大改进？ <a href=\"https://www.zhihu.com/question/34074946\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/34074946</a><br>2、深入研究：HTTP2 的真正性能到底如何  <a href=\"https://segmentfault.com/a/1190000007219256\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000007219256</a><br>————————————————<br>版权声明：本文为CSDN博主「Sam哥哥」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href=\"https://blog.csdn.net/linsongbin1/article/details/54980801\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/linsongbin1/article/details/54980801</a></p>\n","categories":[],"tags":[]}